generator client {
  provider = "prisma-client-js"
  output = "./generated"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_URI")
}

model User {
    id String @id @default(uuid())

    email String @unique
    password String

    username String @unique
    display_name String @map("display_name")

    avatar String?
    bio String?

    isVerified Boolean @default(false) @map("is_verified")
    isEmailVerified Boolean @default(false) @map("is_email_verified")

    isTotpEnabled Boolean @default(false) @map("is_totp_enabled")
    totpSecret String? @map("totp_secret")

    isDeactivated Boolean @default(false) @map("is_deactivated")
    deactivatedAt DateTime? @map("deactivated_at")

    tokens Token[]
    socialLinks SocialLink[]
    stream Stream?

    created_at DateTime @default(now()) @map("created_ad")
    updated_at DateTime @updatedAt @map("updated_at")

    @@map("users")
}

model SocialLink {
  id String @id @default(uuid())

  title String
  url String
  position Int

  user User? @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String? @map("user_id")

  createdAt DateTime @default(now()) @map("created_ad")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("social_link")
}

model Token {
  id String @id @default(uuid())

  token String @unique
  type TokenType
  expiresIn DateTime @map("expires_in")

  user User? @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String? @map("user_id")

  created_at DateTime @default(now()) @map("created_ad")
  updated_at DateTime @updatedAt @map("updated_at")

  @@map("tokens")
}

model Stream {
  id String @id @default(uuid())

  title String
  thumbnailUrl String?

  ingressId String? @unique
  serverUrl String?
  streamKey String?

  isLive Boolean @default(false)

  user User? @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String? @unique @map("user_id")

  category   Category? @relation(fields: [categoryId], references: [id])
  categoryId String?   @map("category_id")

  created_at DateTime @default(now()) @map("created_ad")
  updated_at DateTime @updatedAt @map("updated_at")

  @@map("stream")
}

model Category {
  id String @id @default(uuid())

  title        String
  slug         String  @unique
  description  String?
  thumbnailUrl String  @map("thumbnail_url")

  streams Stream[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("categories")
}

enum TokenType {
  EMAIL_VERIFY
  PASSWORD_RESET
  DEACTIVATE_ACCOUNT

  @@map("token_types")
}
